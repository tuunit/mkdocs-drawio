name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/python-publish.yml"
      - "pyproject.toml"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
    
      - name: Set up Python 
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Install poetry
        run: python3 -m pip install build poetry --user

      - name: Install dependencies
        run: poetry install --no-root

      - name: Check formatting
        run: |
          poetry run ruff check .
          poetry run black --check .

      - name: Build
        run: poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

          tag="v$(poetry version -s)"

          git tag -a "${tag}" -m "Release ${tag}"
          git push origin "${tag}"

          gh release create "${tag}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag}" \
              --generate-notes

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
