{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs Plugin for embedding Drawio files","text":"<p>This plugin allows you to embed draw.io diagrams in your MkDocs documentation. It is compatible with most MkDocs themes, but specifically tested with the Material theme and the MkDocs default theme.</p> <p>Sergey (onixpro) is the original creator of this plugin but since his repository isn't maintained anymore we forked it on the 19th December of 2023 and have been keeping it up-to-date and expanding on the features since then.  Buy Sergey a \u2615 </p>"},{"location":"#installation","title":"Installation","text":"<p>Install the plugin using pip or poetry:</p> <pre><code>pip install mkdocs-drawio\n</code></pre> <p>or</p> <pre><code>poetry add mkdocs-drawio\n</code></pre> <p>Then add the plugin to your <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - drawio\n</code></pre>"},{"location":"#features","title":"Features","text":"<p>The currently supported features are:</p> <ul> <li>Embed draw.io diagrams as normal markdown images in your documentation.</li> <li>Use diagrams hosted within your own docs or external urls.</li> <li>Support for multi page diagrams by selecting which page to display.</li> <li>Compatible with <code>mkdocs-caption</code> and <code>mkdocs-glightbox</code>.</li> <li>Print and edit button.</li> <li>Dark Mode \ud83d\udd76\ufe0f</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Simply add an image as you would normally do in markdown:</p> <pre><code>Absolute path:\n![](/assets/my-diagram.drawio)\n\nSame directory as the markdown file:\n![](my-diagram.drawio)\n\nRelative directory to the markdown file:\n![](../my-diagram.drawio)\n\n\nOr you can use external urls:\n![](https://example.com/diagram.drawio)\n</code></pre> <p>Additionally this plugin supports multi page diagrams by using the <code>alt</code> text to select the pages by name:</p> <pre><code>![Page-2](my-diagram.drawio)\n![my-custom-page-name](my-diagram.drawio)\n</code></pre>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#diagram-options","title":"Diagram options","text":"<p>By default the plugin uses the official url for the minified drawio javascript library. To use a custom source for the drawio viewer you can overwritte the url. This might be useful in airlocked environments.</p> <pre><code>plugins:\n  - drawio:\n      viewer_js: \"https://viewer.diagrams.net/js/viewer-static.min.js\"\n</code></pre> <p>Further options are the following with their default value:</p> <pre><code>plugins:\n  - drawio:\n      # Control if hovering on a diagram shows a toolbar for zooming or not\n      toolbar: true\n\n      # Control if tooltips will be shown (data-tooltips)\n      tooltips: true\n\n      # Increase or decrease the padding around your diagrams\n      # (data-border)\n      border: 5\n\n      # Control if edit button will be shown in the lightbox view\n      # (data-edit)\n      edit: true\n\n      # Control if darkmode is supported\n      # When activated the color scheme for your diagrams is automatically toggled\n      # based on the selected theme. Supports classic mkdocs and mkdocs-material.\n      darkmode: true \n</code></pre>"},{"location":"configuration/#html-attributes","title":"HTML Attributes","text":"<p>For each global configuration option you can also use the attribute in the diagram itself. This will override the global configuration. Here is an example: <pre><code>![](my-diagram.drawio){ data-toolbar-zoom=\"false\" }\n</code></pre></p> <p>To use these attributes you need to enable the markdown extension <code>attr_list</code> in your <code>mkdocs.yml</code>:</p> <pre><code>markdown_extensions:\n  - attr_list\n</code></pre>"},{"location":"configuration/#material-integration","title":"Material Integration","text":"<p>If you are using the Material Theme and want to use the instant-loading feature. You will have to configure the following:</p> <p>In your <code>mkdocs.yaml</code>:</p> <pre><code>theme:\n  name: material\n  features:\n    - navigation.instant\n\nplugins:\n  - drawio\n\nextra_javascript:\n  - https://viewer.diagrams.net/js/viewer-static.min.js\n  - javascripts/drawio-reload.js\n</code></pre> <p>Add <code>docs/javascripts/drawio-reload.js</code> to your project:</p> <pre><code>document$.subscribe(({ body }) =&gt; {\n  GraphViewer.processElements()\n})\n</code></pre>"},{"location":"plumbing/","title":"Plumbing and internals","text":"<p>For those who want to understand how the plugin works, here is a brief overview.</p>"},{"location":"plumbing/#diagramsnet","title":"Diagrams.net","text":"<p>Diagrams.net or Draw.io is a free online diagram software. It is great for creating diagrams, flowcharts, process diagrams, and more. </p> <p>It relies on JTGraph's mxGraph library to render the diagrams. A mxGraph is a XML-based language that defines the structure of the diagram. Here an example</p> <p></p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;mxfile host=\"app.diagrams.net\" version=\"26.0.7\"&gt;\n  &lt;diagram name=\"Page-1\" id=\"mV4jbraemd7C51ydpzk2\"&gt;\n    &lt;mxGraphModel dx=\"565\" dy=\"355\" grid=\"1\" gridSize=\"10\"\n        guides=\"1\" tooltips=\"1\" connect=\"1\" arrows=\"1\" fold=\"1\"\n        page=\"1\" pageScale=\"1\" pageWidth=\"394\" pageHeight=\"394\"\n        math=\"0\" shadow=\"0\"&gt;\n      &lt;root&gt;\n        &lt;mxCell id=\"0\" /&gt;\n        &lt;mxCell id=\"1\" parent=\"0\" /&gt;\n        &lt;mxCell id=\"7JHgTfKEjFP575Ptm9la-1\" value=\"\"\n            style=\"ellipse;whiteSpace=wrap;html=1;aspect=fixed;\"\n            vertex=\"1\" parent=\"1\"&gt;\n          &lt;mxGeometry x=\"80\" y=\"40\" width=\"80\" height=\"80\" as=\"geometry\" /&gt;\n        &lt;/mxCell&gt;\n        &lt;mxCell id=\"7JHgTfKEjFP575Ptm9la-2\" value=\"\"\n            style=\"whiteSpace=wrap;html=1;aspect=fixed;\n                   fillColor=#f8cecc;strokeColor=#b85450;\"\n            vertex=\"1\" parent=\"1\"&gt;\n          &lt;mxGeometry x=\"180\" y=\"40\" width=\"80\" height=\"80\" as=\"geometry\" /&gt;\n        &lt;/mxCell&gt;\n      &lt;/root&gt;\n    &lt;/mxGraphModel&gt;\n  &lt;/diagram&gt;\n&lt;/mxfile&gt;\n</code></pre>"},{"location":"plumbing/#plumbing","title":"Plumbing","text":"<p>The plugin heavily relies on the Draw.io GraphViewer to render diagrams. The plugin itself is only responsible for replacing markdown references of drawio diagrams with the actual content of the files, passing configuration options to the viewer library and ensure compatibility across MkDocs themes. </p> <p>Furthermore, it provides a way to extract pages from diagrams to only serve the necessary content to the user. This is useful when you have a large diagram and only want to show a specific part of it.</p> <p>How the plugin processes diagrams:</p> <ol> <li>mkdocs itself generates HTML for each markdown file in your docs.</li> <li><code>mkdocs-drawio</code> then attaches to the <code>on_post_page</code> event. For more details, please have a look at the event lifecycle documentation</li> <li>Adds the drawio viewer javascript reference</li> <li>Searches through the generated HTML for all <code>img</code> tags that reference a file with the extension <code>.drawio</code></li> <li>Replaces the found <code>img</code> tags with <code>mxgraph</code> HTML block (actual drawio file content). For more details, please have a look at the official drawio.com documentation.</li> </ol> <p>By default this plugin uses the GraphViewer minified version.</p> <p>This is a standalone viewer for drawio diagrams that can be embedded in any web page to convert mxGraph XML to SVG. It features a lightbox mode and a toolbar with buttons to zoom, edit, and navigate the diagram.</p>"},{"location":"tests/code-blocks/","title":"Code Blocks","text":"<p>Diagrams are not rendered in code blocks.</p>"},{"location":"tests/code-blocks/#example","title":"Example","text":"<pre><code>![test diagram](test.drawio)\n</code></pre>"},{"location":"tests/code-blocks/#markdown","title":"Markdown","text":"<pre><code> ```markdown\n ![test diagram](test.drawio)\n ```\n</code></pre>"},{"location":"tests/configuration/","title":"Test config settings","text":"<p>You should be able to use the <code>tooltips: true|false</code> config flag in your <code>mkdocs.yml</code> to control if tooltips should be shown or not: </p> <p>You should be able to see a mathematical expressions properly rendered: </p> <p>You should be able to use the <code>edit: true|false</code> config flag in your 'mkdocs.yml' to control if the edit button will be shown in the lightbox view of your diagrams.</p>"},{"location":"tests/error-handling/","title":"Error Handling","text":"<p>In the following case the diagram is not valid should show an error message <code>Not a diagram file</code>.</p>"},{"location":"tests/error-handling/#example","title":"Example","text":"<p>Additionnaly, you should see a warning in your MkDocs server similar to:</p> <pre><code>WARNING -  Warning: Found 0 results for page name 'test diagram' for diagram 'test.drawio' on path '/tmp/mkdocs_ce1qjhyn/test2'\nERROR   -  Error: Provided diagram file 'test.drawio' on path '/tmp/mkdocs_ce1qjhyn/test5' is not a valid diagram\n</code></pre>"},{"location":"tests/error-handling/#markdown","title":"Markdown","text":"<pre><code>![](test.drawio)\n</code></pre>"},{"location":"tests/external-url/","title":"External URL","text":""},{"location":"tests/external-url/#example","title":"Example","text":"<p>This is an example of an external URL taken from jgraph:</p> <p></p>"},{"location":"tests/external-url/#markdown","title":"Markdown","text":"<pre><code>![](https://raw.githubusercontent.com/jgraph/drawio-diagrams/dev/examples/gemfile-dependency-graph.drawio)\n</code></pre>"},{"location":"tests/pagging/","title":"Pagging","text":"<p>You can either use the <code>alt</code> text of the image for pagging or use an attribute page for pagging if you have the <code>attr_list</code> markdown extension installed in  your <code>mkdocs.yaml</code>.</p> <pre><code>markdown_extensions:\n  - attr_list\n</code></pre>"},{"location":"tests/pagging/#examples","title":"Examples","text":"DiagramMarkdown <p>Below you should see diagram Page-1: </p> <pre><code>![Page-1](test.drawio)\n</code></pre> DiagramMarkdown <p>Below you should see diagram Page-2: </p> <pre><code>![Page-2](test.drawio)\n</code></pre> DiagramMarkdown <p>Below you should see diagram Page-2 using the attribute page: </p> <pre><code>![Some alt text](test.drawio){ page=\"Page-2\" }\n</code></pre> DiagramMarkdown <p>Below you should see Page-1 (default) because the specified Page-3 has not been found: </p> <p>Furthoremore, you should see a warning in your mkdocs server similar to:</p> <pre><code>WARNING -  Warning: Found 0 results for page name 'Page-3' for diagram 'test.drawio' on path '/tmp/mkdocs_ce1qjhyn/test2'\n</code></pre> <pre><code>If page doesn't exist it will fallback to the first page.\n![Page-3](test.drawio)\n</code></pre>"},{"location":"tests/relative-paths/","title":"Relative path to diagram within index.md","text":""},{"location":"tests/relative-paths/#example","title":"Example","text":""},{"location":"tests/relative-paths/#markdown","title":"Markdown","text":"<pre><code>![](../assets/test.drawio)\n</code></pre>"},{"location":"tests/relative-paths/example/","title":"Relative path to diagram within example.md","text":""},{"location":"tests/relative-paths/example/#example","title":"Example","text":""},{"location":"tests/relative-paths/example/#markdown","title":"Markdown","text":"<pre><code>![](../assets/test.drawio)\n</code></pre>"},{"location":"tests/simple-diagram/","title":"Simple diagram","text":""},{"location":"tests/simple-diagram/#example","title":"Example","text":""},{"location":"tests/simple-diagram/#markdown","title":"Markdown","text":"<pre><code>![](test.drawio)\n</code></pre>"},{"location":"tests/svg/","title":"SVG diagram","text":""},{"location":"tests/svg/#example","title":"Example","text":"<p>The following is a SVG based drawio diagram:</p> <p></p> <p>You can open the diagram as an SVG in your browser. Click here.</p>"},{"location":"tests/svg/#markdown","title":"Markdown","text":"<pre><code>![](test.drawio.svg)\n</code></pre>"}]}